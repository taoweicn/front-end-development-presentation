(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{146:function(n,i,l){l(147),l(373),n.exports=l(370)},364:function(n,i,l){var p={"./presentation.md":365};function r(n){var i=e(n);return l(i)}function e(n){var i=p[n];if(!(i+1)){var l=new Error("Cannot find module '"+n+"'");throw l.code="MODULE_NOT_FOUND",l}return i}r.keys=function(){return Object.keys(p)},r.resolve=e,n.exports=r,r.id=364},365:function(n,i,l){n.exports='\x3c!-- background: index-background --\x3e\n<h1 id="-">前端开发现状</h1>\n<hr>\n<blockquote>\n<p>应赵楠的邀请，简要阐述一下前端开发现貌</p>\n<p>以下均为个人见解，如有不妥，欢迎指出</p>\n</blockquote>\n<hr>\n<h2 id="-">两个误区</h2>\n<p><br></p>\n<ul>\n<li>前端以为后端是CRUD</li>\n<li>后端以为前端是切图仔</li>\n</ul>\n<hr>\n<h2 id="-">先来简述下前端历史</h2>\n<p><br></p>\n<blockquote>\n<p>节选自 <a href="https://github.com/ruanyf/jstraining/blob/master/docs/history.md">前端开发的历史和趋势</a></p>\n</blockquote>\n<hr>\n<h2 id="-">早期</h2>\n<p><br></p>\n<ul>\n<li>前后端开发是一体的，主要采用后端MVC模式</li>\n<li>彼时的&quot;前端&quot;负责的是View层的页面模板拼接</li>\n</ul>\n<hr>\n<h2 id="ajax">Ajax</h2>\n<p><br></p>\n<ul>\n<li>Ajax技术诞生，使前后端分离成为可能</li>\n<li>前端不再是后端的模板，可以独立获得各种数据</li>\n<li>典型应用：Gmail（2004）Google Maps（2005）</li>\n</ul>\n<hr>\n<h2 id="web-2-0">Web 2.0</h2>\n<p><br></p>\n<ul>\n<li>Ajax技术促成了 Web 2.0 的诞生</li>\n<li>Web 1.0：静态网页，纯内容展示</li>\n<li>Web 2.0：动态网页，富交互，前端数据处理</li>\n</ul>\n<hr>\n<h2 id="node">Node</h2>\n<p><br></p>\n<ul>\n<li>2009年，Node项目诞生，它是服务器上的 JavaScript 运行环境。</li>\n<li>Node = JavaScript + 操作系统 API</li>\n<li>npm加速了前端工程化，社区化</li>\n</ul>\n<hr>\n<h2 id="-">再来看下开头的那个误区</h2>\n<p><br></p>\n<p>前端很难吗？</p>\n<hr>\n<p>不难，一周左右学会HTML + CSS，两周学会JavaScript</p>\n<p><br></p>\n<p><img src="'+l(366)+'" alt=""></p>\n<p>仅仅是个吐槽:)</p>\n<hr>\n<h2 id="-">前端的难点在什么？</h2>\n<p><br></p>\n<ul>\n<li>一部分是语言的原因</li>\n<li>一部分是工程的原因</li>\n</ul>\n<hr>\n<h2 id="-">语言方面</h2>\n<p><br></p>\n<ul>\n<li>JavaScript本身过于随意，语法本身就有不少坑</li>\n<li>动态语言，大型项目乏力？</li>\n</ul>\n<p><br></p>\n<h2 id="-">工程方面</h2>\n<p><br></p>\n<ul>\n<li>在node和npm之前，没有统一的工程化、模块化的规范</li>\n</ul>\n<p><br></p>\n<p>为何流行：V8太给力(Google在前端的分量）</p>\n<hr>\n<h2 id="-">语言不够，社区来凑</h2>\n<p><br></p>\n<p>值得一提的是JavaScript社区很活跃，弥补了不少语言本身的缺陷</p>\n<hr>\n<h2 id="-">常见的社区方案</h2>\n<p><br></p>\n<ul>\n<li>强类型：typescript（静态类型，语法糖）</li>\n<li>打包工具：webpack（模块化，代码压缩混淆）</li>\n<li>预编译器： prepack（提高代码执行速度）</li>\n<li>代码规范： eslint（避免js本身的一些坑）、stylelint</li>\n<li>代码转换： babel（浏览器新语法跟进慢）</li>\n</ul>\n<p><br></p>\n<p>特点：前端的学习少在语言层面，多在社区层面</p>\n<p>PS：几乎所有工具都是开源的</p>\n<hr>\n<p><img src="'+l(367)+'" alt=""></p>\n<hr>\n<h2 id="-">上述工具解决了什么问题？</h2>\n<p><br></p>\n<p>写一个页面容易，写一百个，一千个呢？</p>\n<p>一旦规模变大，会写与能写的区别就凸显了</p>\n<hr>\n<h2 id="-node-node-">再讲一下node，前端能用node来干嘛？</h2>\n<hr>\n<p>node端表面上看是能让js写服务端</p>\n<p><br></p>\n<p>但node带来的变革不止如此</p>\n<hr>\n<h2 id="-node-">外面在用node干什么？</h2>\n<p><br></p>\n<ul>\n<li>真的服务端，参见egg、hapi之类的框架</li>\n<li>前后端同构，引入服务端渲染，意义？</li>\n<li>运维、监控、抓包，参见TSW</li>\n<li>国内node实践较早的两家公司：阿里，腾讯</li>\n</ul>\n<hr>\n<p><img src="'+l(368)+'" alt=""></p>\n<hr>\n<p><img src="'+l(369)+'" alt=""></p>\n<hr>\n<h2 id="-">所以前后端的区别是什么？</h2>\n<p><br></p>\n<p>我认为前后端已经不是单纯那种运行在服务端还是客户端的区别</p>\n<p>当然也和用什么语言没关系，不同领域的语言和工具都可以共用</p>\n<p>我更倾向于用数据来区分二者:)</p>\n<p><br></p>\n<ul>\n<li>前端是获取数据，展示数据（手段不限于在客户端拼接还是在服务端拼接）</li>\n<li>后端是处理，存储，分析数据</li>\n</ul>\n<hr>\n<h2 id="8012-">8012年的今天，前端正在流行什么？经历什么？</h2>\n<p><br></p>\n<ul>\n<li>三大MVVM鼎立：Augular，React，Vue</li>\n<li>运行环境的多样化：浏览器, node，electron, 小程序，快应用</li>\n<li>PWA兴起</li>\n<li>多端框架的流行：RN，Taro，mpvue</li>\n<li>WebAssembly</li>\n</ul>\n<hr>\n<h2 id="-">框架解决的问题</h2>\n<p><br></p>\n<ul>\n<li>可复用性，可维护性，组件化</li>\n<li>引入visual DOM，减少频繁的DOM操作带来的性能消耗</li>\n<li>生成平台无关的数据结构描述，方便多端实现</li>\n</ul>\n<hr>\n<h2 id="-">未来</h2>\n<p><br></p>\n<ul>\n<li>拥抱规范，Web Components, css next, Houdini, Shadow DOM</li>\n<li>每一项技术变革都可能带来前端巨变，三大框架的未来？</li>\n<li>PWA，多端实现的最低成本</li>\n<li>WebAssembly，为前端引入新的血液</li>\n</ul>\n<hr>\n<h1 id="thanks">Thanks</h1>\n'},366:function(n,i,l){n.exports=l.p+"6c3503ac264cb2ee221f7f9379250f02.jpg"},367:function(n,i,l){n.exports=l.p+"1fba9e5d60669ec02ffc7d03068afae0.jpg"},368:function(n,i,l){n.exports=l.p+"c4804131a06b2a6d0ddde42c278e7802.png"},369:function(n,i,l){n.exports=l.p+"6eff166b40e47ddcbfe5e8725f508708.png"},371:function(n,i,l){var p=l(372);"string"==typeof p&&(p=[[n.i,p,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};l(51)(p,r);p.locals&&(n.exports=p.locals)},372:function(n,i,l){}},[[146,3,4]],[5]]);